name: CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      build-output: ${{ steps.store-output.outputs.build-output }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up a virtual environment for Python
        run: |
          python -m pip install --upgrade virtualenv
          virtualenv venv
          source venv/bin/activate

      - name: Install the base dependencies
        run: |
          source venv/bin/activate
          python -m pip install --upgrade poetry

      - name: Store build output
        id: store-output
        run: |
          echo "::set-output name=build-output::output-value"

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up a virtual environment for Python
        run: |
          python -m pip install --upgrade virtualenv
          virtualenv venv
          source venv/bin/activate

      - name: Install the base dependencies
        run: |
          source venv/bin/activate
          python -m pip install --upgrade poetry

      - name: Use build output
        run: |
          echo "Build Output: ${{ needs.build.outputs.build-output }}"

      - name: Run tests
        run: |
          source venv/bin/activate
          poetry run pytest -v
